"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.MeshPrimitiveAttribute = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
var flatbuffers = require("flatbuffers");
var MeshPrimitiveAttribute = /** @class */ (function () {
    function MeshPrimitiveAttribute() {
        this.bb = null;
        this.bb_pos = 0;
    }
    MeshPrimitiveAttribute.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    MeshPrimitiveAttribute.getRootAsMeshPrimitiveAttribute = function (bb, obj) {
        return (obj || new MeshPrimitiveAttribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    MeshPrimitiveAttribute.getSizePrefixedRootAsMeshPrimitiveAttribute = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new MeshPrimitiveAttribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    MeshPrimitiveAttribute.prototype.id = function (optionalEncoding) {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    };
    MeshPrimitiveAttribute.prototype.value = function () {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.readInt32(this.bb_pos + offset) : -1;
    };
    MeshPrimitiveAttribute.startMeshPrimitiveAttribute = function (builder) {
        builder.startObject(2);
    };
    MeshPrimitiveAttribute.addId = function (builder, idOffset) {
        builder.addFieldOffset(0, idOffset, 0);
    };
    MeshPrimitiveAttribute.addValue = function (builder, value) {
        builder.addFieldInt32(1, value, -1);
    };
    MeshPrimitiveAttribute.endMeshPrimitiveAttribute = function (builder) {
        var offset = builder.endObject();
        builder.requiredField(offset, 4); // id
        return offset;
    };
    MeshPrimitiveAttribute.createMeshPrimitiveAttribute = function (builder, idOffset, value) {
        MeshPrimitiveAttribute.startMeshPrimitiveAttribute(builder);
        MeshPrimitiveAttribute.addId(builder, idOffset);
        MeshPrimitiveAttribute.addValue(builder, value);
        return MeshPrimitiveAttribute.endMeshPrimitiveAttribute(builder);
    };
    return MeshPrimitiveAttribute;
}());
exports.MeshPrimitiveAttribute = MeshPrimitiveAttribute;
